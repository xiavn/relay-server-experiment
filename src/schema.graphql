### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type Link implements Node {
  description: String
  id: ID!
  postedBy: User
  url: String
  votes: [Vote!]!
}

type Mutation {
  addVote(linkId: Int!): Vote
  createLink(description: String!, url: String!): Link!
  deleteLink(id: ID!): Link!
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, name: String!, password: String!): AuthPayload
  updateLink(description: String, id: ID!, url: String): Link!
}

interface Node {
  id: ID!
}

type Query {
  feed: [Link]!
  link(id: Int!): Link
  node(id: ID!): Node
}

type Subscription {
  newLink: Link
  newVote: Vote
}

type User implements Node {
  email: String!
  id: ID!
  links: [Link!]!
  name: String!
}

type Vote implements Node {
  id: ID!
  link: Link
  user: User
}
